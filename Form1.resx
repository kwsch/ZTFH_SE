<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="menuStrip1.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAIhwAAAEAIADoDwAAFgAAACgAAAAiAAAAOAAAAAEAIAAAAAAAwA8AAAAAAAAAAAAAAAAAAAAA
        AAAAAABbAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAABbAAAAAAAAAAAAAABbAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAABbAAAA/zRlY/9ZbmX/WW5l/1luZf9ZbmX/WW5l/1luZf9ZbmX/WW5l/1lu
        Zf9ZbmX/NGVj/1luZf80ZWP/AAAA/wAAAAAAAAAAAAAA/xt9Y/8ko2X/JKNl/ySjZf8ko2X/JKNl/ySj
        Zf8ko2X/JKNl/ySjZf8ko2X/G31j/ySjZf8bfWP/AAAA/wAAAP9ZbmX/rVk8/8lFIP/JRSD/yUUg/8lF
        IP/JRSD/yUUg/8lFIP/JRSD/yUUg/8lFIP+tWTz/WW5l/wAAAP8AAAAAAAAAAAAAAP8ko2X/PMs8/0XJ
        IP9FySD/Rckg/0XJIP9FySD/Rckg/0XJIP9FySD/Rckg/0XJIP88yzz/JKNl/wAAAP8AAABbAAAA/4dr
        V//JRSD/yUUg/6x+af/JRSD/yUUg/8lFIP/JRSD/yUUg/8lFIP/JRSD/h2tX/wAAAP8AAABbAAAAAAAA
        AAAAAABbAAAA/zDCV/9FySD/Rckg/1PXaf9FySD/Rckg/0XJIP9FySD/Rckg/0XJIP9FySD/MMJX/wAA
        AP8AAABbAAAAEwAAAP9ZbmX/rVk8/7hbPP/R5uT/rH5p/8lFIP/JRSD/yUUg/8lFIP/JRSD/rVk8/1lu
        Zf8AAAD/AAAAEwAAAAAAAAAAAAAAEwAAAP8ko2X/PMs8/0TOPP/B9uT/U9dp/0XJIP9FySD/Rckg/0XJ
        IP9FySD/PMs8/ySjZf8AAAD/AAAAEwAAAAAAAAAjAAAA/4drV//JRSD/rH5p/9Hm5P+4Wzz/yUUg/8lF
        IP/JRSD/yUUg/4drV/8AAAD/AAAAIwAAAAAAAAAAAAAAAAAAAAAAAAAjAAAA/zDCV/9FySD/U9dp/8H2
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAMwAAAP8YV8b/ICfJ/yAnyf8YV8b/AAAA/wAAACMAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABbAAAA/xxAzf8cQM3/AAAA/wAA
        AFsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEwAA
        AP8VYqn/FWKp/wAAAP8AAAATAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAATAAAA/wAAAP8AAAATAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAD8AAAAAAMAAPwAAAAAAwAA/AAAAAADAAD8A
        AAAAAMAAPwAAAIAB4AB/AAAAwAPwAP8AAADAA/AA/wAAAOAH+AH/AAAA4Af4Af8AAADwD/wD/wAAAPgf
        /gf/AAAA+B/+B/8AAAD8P/8P/wAAAP+AAH//AAAA/4AAf/8AAAD/gAB//wAAAP+AAH//AAAA/4AAf/8A
        AAD/wAD//wAAAP/gAf//AAAA/+AB//8AAAD/8AP//wAAAP/wA///AAAA//gH//8AAAD//A///wAAAP/8
        D///AAAA//4f//8AAAA=
</value>
  </data>
</root>